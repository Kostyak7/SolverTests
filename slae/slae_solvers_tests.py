import numpy as np

def print_solution(A, b):
    try:
        x = np.linalg.solve(A, b)
        print("Решение:", np.round(x, 4))
    except np.linalg.LinAlgError:
        print("Система вырождена или не имеет единственного решения!")
    print("-" * 50)

# 1. Простая симметричная матрица с диагональным преобладанием
A1 = [[5, 1, 0, 0, 0],
      [1, 5, 1, 0, 0],
      [0, 1, 5, 1, 0],
      [0, 0, 1, 5, 1],
      [0, 0, 0, 1, 5]]
b1 = [1, 2, 3, 4, 5]

# 2. Матрица с одинаковыми элементами вне диагонали
A2 = [[4, -1, -1, -1, -1],
      [-1, 4, -1, -1, -1],
      [-1, -1, 4, -1, -1],
      [-1, -1, -1, 4, -1],
      [-1, -1, -1, -1, 4]]
b2 = [1, 1, 1, 1, 1]

# 3. Матрица с возрастающими значениями
A3 = [[2, 1, 1, 1, 1],
      [1, 3, 1, 1, 1],
      [1, 1, 4, 1, 1],
      [1, 1, 1, 5, 1],
      [1, 1, 1, 1, 6]]
b3 = [6, 7, 8, 9, 10]

# 4. Матрица с чередующимися знаками
A4 = [[6, -1, 1, -1, 1],
      [-1, 6, -1, 1, -1],
      [1, -1, 6, -1, 1],
      [-1, 1, -1, 6, -1],
      [1, -1, 1, -1, 6]]
b4 = [6, -6, 6, -6, 6]

# 5. Матрица Тёплица (симметричная с постоянными диагоналями)
A5 = [[3, 2, 1, 0, 0],
      [2, 3, 2, 1, 0],
      [1, 2, 3, 2, 1],
      [0, 1, 2, 3, 2],
      [0, 0, 1, 2, 3]]
b5 = [6, 8, 10, 8, 6]

# 6. Единичная матрица (из вашего примера)
A6 = [[1, 0, 0, 0, 0],
      [0, 1, 0, 0, 0],
      [0, 0, 1, 0, 0],
      [0, 0, 0, 1, 0],
      [0, 0, 0, 0, 1]]
b6 = [1, 2, 3, 4, 5]

# Тестируем все системы
systems = [(A1, b1), (A2, b2), (A3, b3), (A4, b4), (A5, b5), (A6, b6)]

for i, (A, b) in enumerate(systems, 1):
    print(f"\nТест #{i}:")
    print("Матрица A:")
    for row in A:
        print(row)
    print("Вектор b:", b)
    print_solution(A, b)